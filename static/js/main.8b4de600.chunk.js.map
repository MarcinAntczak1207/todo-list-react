{"version":3,"sources":["Form/index.js","Tasks/index.js","Buttons/index.js","SectionTasks/index.js","SectionForm/index.js","Header/index.js","Container/index.js","App.js","reportWebVitals.js","index.js"],"names":["Form","className","placeholder","autoFocus","required","Tasks","tasks","hideDoneTasks","map","task","done","content","id","Buttons","length","disabled","every","SectionTasks","title","body","extraHeaderContent","SectionForm","Header","Container","children","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6UASeA,EAPF,kBACX,uBAAMC,UAAU,OAAhB,UACE,uBAAOA,UAAU,cAAcC,YAAY,wBAAwBC,WAAS,EAACC,UAAQ,IACrF,wBAAQH,UAAU,eAAlB,+BCsBWI,G,MAzBD,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,cAAV,OACV,oBAAIN,UAAU,QAAd,SACKK,EAAME,KAAI,SAAAC,GAAI,OACX,qBACkBR,UAAS,qBAAgBQ,EAAKC,MAAQH,EAC1C,uBACA,IAHd,UAMI,wBAAQN,UAAU,0CAAlB,SACKQ,EAAKC,KAAO,SAAM,KAEvB,sBAAMT,UAAS,wBACIQ,EAAKC,KAAO,wBAA0B,IADzD,SAGKD,EAAKE,UAEV,wBAAQV,UAAU,sCAAlB,kCAbKQ,EAAKG,WCYXC,G,MAhBC,SAAC,GAAD,IAAEP,EAAF,EAAEA,MAAOC,EAAT,EAASA,cAAT,OACZD,EAAMQ,OAAS,GACX,sBAAKb,UAAU,UAAf,UACI,wBAAQA,UAAU,mBAAlB,SACKM,EAAgB,4BAAoB,yBAEzC,wBACAN,UAAU,mBACVc,SAAUT,EAAMU,OAAM,qBAAGN,QAFzB,wCCMGO,G,MAZM,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAMC,EAAhB,EAAgBA,mBAAhB,OACjB,0BAASnB,UAAU,UAAnB,UACI,sBAAKA,UAAU,qBAAf,UACE,oBAAIA,UAAU,kBAAd,SAAiCiB,IAChCE,KAEH,qBAAKnB,UAAU,gBAAf,SACGkB,SCEIE,G,MATK,SAAC,GAAD,IAAGH,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAV,OACpB,0BAASlB,UAAU,UAAnB,UACQ,oBAAIA,UAAU,kBAAd,SAAiCiB,IACjC,qBAAKjB,UAAU,gBAAf,SACKkB,SCAEG,G,MAJA,SAAC,GAAD,IAAEJ,EAAF,EAAEA,MAAF,OACX,oBAAIjB,UAAU,oBAAd,SAAmCiB,MCKxBK,G,MANG,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACd,sBAAMvB,UAAU,YAAhB,SACKuB,MCKHlB,EAAQ,CACZ,CAAEM,GAAI,EAAGD,QAAS,8BAAqBD,MAAM,GAC7C,CAAEE,GAAI,EAAGD,QAAS,wBAAeD,MAAM,IAqB1Be,MAjBf,WACE,OACE,eAAC,EAAD,WACE,cAAC,EAAD,CAAQP,MAAM,qBACd,cAAC,EAAD,CACEA,MAAM,qBACNC,KAAM,cAAC,EAAD,MAER,cAAC,EAAD,CACED,MAAM,mBACNC,KAAM,cAAC,EAAD,CAAOb,MAAOA,EAAOC,cAZb,QAada,mBAAoB,cAAC,EAAD,CAASd,MAAOA,EAAOC,cAb7B,cCDPmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8b4de600.chunk.js","sourcesContent":["import \"./style.css\";\r\n\r\nconst Form = () => (\r\n  <form className=\"form\">\r\n    <input className=\"form__input\" placeholder=\"Co jest do zrobienia?\" autoFocus required />\r\n    <button className=\"form__button\">Dodaj zadanie</button>\r\n  </form>\r\n);\r\n\r\nexport default Form;\r\n","import \"./style.css\";\r\n\r\nconst Tasks = ({ tasks, hideDoneTasks }) => (\r\n    <ul className=\"tasks\">\r\n        {tasks.map(task => (\r\n            <li\r\n                key={task.id} className={`tasks__item${task.done && hideDoneTasks\r\n                        ? \" tasks__item--hidden\"\r\n                        : \"\"}`\r\n                }\r\n            >\r\n                <button className=\"tasks__button tasks__button--toggleDone\">\r\n                    {task.done ? \"‚úî\" : \"\"}\r\n                </button>\r\n                <span className={\r\n                  `tasks__content${task.done ? \" tasks__content--done\" : \"\"}`\r\n                  }>\r\n                    {task.content}\r\n                </span>\r\n                <button className=\"tasks__button tasks__button--remove\">\r\n                    üóëÔ∏è\r\n                </button>\r\n            </li>\r\n        ))}\r\n    </ul >\r\n);\r\n\r\nexport default Tasks;\r\n","import \"./style.css\";\r\n\r\nconst Buttons = ({tasks, hideDoneTasks}) => (\r\n    tasks.length > 0 && (\r\n        <div className=\"buttons\">\r\n            <button className=\"section__buttons\" >\r\n                {hideDoneTasks ? \"Poka≈º uko≈Ñczone\" : \"Ukryj uko≈Ñczone\"}\r\n            </button>\r\n            <button\r\n            className=\"section__buttons\"\r\n            disabled={tasks.every(({ done }) => done)}\r\n                >\r\n                Uko≈Ñcz wszystkie\r\n            </button>\r\n        </div>\r\n    )\r\n);\r\n\r\nexport default Buttons;\r\n","import \"./style.css\";\r\n\r\nconst SectionTasks = ({ title, body, extraHeaderContent }) => (\r\n    <section className=\"section\">\r\n        <div className=\"section__container\">\r\n          <h2 className=\"section__header\">{title}</h2>\r\n          {extraHeaderContent}\r\n        </div>\r\n        <div className=\"section__item\">\r\n          {body}\r\n        </div>\r\n      </section>\r\n);\r\n\r\nexport default SectionTasks;","import \"./style.css\";\r\n\r\nconst SectionForm = ({ title, body }) => (\r\n<section className=\"section\">\r\n        <h2 className=\"section__header\">{title}</h2>\r\n        <div className=\"section__item\">\r\n            {body}\r\n        </div>\r\n      </section>\r\n);\r\n\r\nexport default SectionForm;","import \"./style.css\";\r\n\r\nconst Header = ({title}) => (\r\n    <h1 className=\"container__header\">{title}</h1>\r\n);\r\n\r\nexport default Header;","import \"./style.css\";\r\n\r\nconst Container = ({ children }) => (\r\n    <main className=\"container\">\r\n        {children}\r\n    </main>\r\n);\r\n\r\nexport default Container;","import React from 'react';\nimport Form from \"./Form\";\nimport Tasks from \"./Tasks\";\nimport Buttons from \"./Buttons\";\nimport SectionTasks from \"./SectionTasks\";\nimport SectionForm from \"./SectionForm\";\nimport Header from \"./Header\";\nimport Container from \"./Container\"\n\nconst tasks = [\n  { id: 1, content: \"przej≈õƒá na reacta\", done: true },\n  { id: 2, content: \"zje≈õƒá obiad\", done: false },\n];\nconst hideDoneTasks = false;\n\nfunction App() {\n  return (\n    <Container>\n      <Header title=\"Lista zada≈Ñ\" />\n      <SectionForm\n        title=\"Dodaj nowe zadanie\"\n        body={<Form />}\n      />\n      <SectionTasks\n        title=\"Lista zada≈Ñ\"\n        body={<Tasks tasks={tasks} hideDoneTasks={hideDoneTasks} />}\n        extraHeaderContent={<Buttons tasks={tasks} hideDoneTasks={hideDoneTasks} />}\n      />\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}