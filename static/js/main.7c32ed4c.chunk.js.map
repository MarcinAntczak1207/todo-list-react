{"version":3,"sources":["Form/index.js","Tasks/index.js","Buttons/index.js","TaskSection/index.js","FormSection/index.js","Header/index.js","Container/index.js","App.js","reportWebVitals.js","index.js"],"names":["Form","className","placeholder","autoFocus","required","Tasks","tasks","hideDone","removeTask","toggleTaskDone","map","task","done","onClick","id","content","Buttons","toggleHideDone","setAllDone","length","disabled","every","TaskSection","title","body","extraHeaderContent","FormSection","Header","Container","children","App","useState","setHideDone","setTasks","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7c32ed4c.chunk.js","sourcesContent":["import \"./style.css\";\r\n\r\nconst Form = () => (\r\n  <form className=\"form\">\r\n    <input className=\"form__input\" placeholder=\"Co jest do zrobienia?\" autoFocus required />\r\n    <button className=\"form__button\">Dodaj zadanie</button>\r\n  </form>\r\n);\r\n\r\nexport default Form;\r\n","import \"./style.css\";\r\n\r\nconst Tasks = ({ tasks, hideDone, removeTask, toggleTaskDone }) => (\r\n    <ul className=\"tasks\">\r\n        {tasks.map(task => (\r\n            <li\r\n                key={task.id}\r\n                className={`tasks__item${task.done && hideDone\r\n                    ? \" tasks__item--hidden\"\r\n                    : \"\"}`\r\n                }\r\n            >\r\n                <button\r\n                    className=\"tasks__button tasks__button--toggleDone\"\r\n                    onClick={() => toggleTaskDone(task.id)}\r\n                >\r\n                    {task.done ? \"‚úî\" : \"\"}\r\n                </button>\r\n                <span className={`tasks__content${task.done ? \" tasks__content--done\" : \"\"}`}>\r\n                    {task.content}\r\n                </span>\r\n                <button\r\n                    className=\"tasks__button tasks__button--remove\"\r\n                    onClick={() => removeTask(task.id)}\r\n                >\r\n                    üóëÔ∏è\r\n                </button>\r\n            </li>\r\n        ))}\r\n    </ul >\r\n);\r\n\r\nexport default Tasks;\r\n","import \"./style.css\";\r\n\r\nconst Buttons = ({ tasks, hideDone, toggleHideDone, setAllDone }) => (\r\n  tasks.length > 0 && (\r\n    <div className=\"buttons\">\r\n      <button onClick={toggleHideDone} className=\"section__buttons\" >\r\n        {hideDone ? \"Poka≈º uko≈Ñczone\" : \"Ukryj uko≈Ñczone\"}\r\n      </button>\r\n      <button\r\n        onClick={setAllDone}\r\n        className=\"section__buttons\"\r\n        disabled={tasks.every(({ done }) => done)}\r\n      >\r\n        Uko≈Ñcz wszystkie\r\n      </button>\r\n    </div>\r\n  )\r\n);\r\n\r\nexport default Buttons;\r\n","import \"./style.css\";\r\n\r\nconst TaskSection = ({ title, body, extraHeaderContent }) => (\r\n  <section className=\"section\">\r\n    <div className=\"section__container\">\r\n      <h2 className=\"section__header\">{title}</h2>\r\n      {extraHeaderContent}\r\n    </div>\r\n    <div className=\"section__item\">\r\n      {body}\r\n    </div>\r\n  </section>\r\n);\r\n\r\nexport default TaskSection;","import \"./style.css\";\r\n\r\nconst FormSection = ({ title, body }) => (\r\n  <section className=\"section\">\r\n    <h2 className=\"section__header\">{title}</h2>\r\n    <div className=\"section__item\">\r\n      {body}\r\n    </div>\r\n  </section>\r\n);\r\nexport default FormSection;","import \"./style.css\";\r\n\r\nconst Header = ({title}) => (\r\n    <h1 className=\"container__header\">{title}</h1>\r\n);\r\n\r\nexport default Header;","import \"./style.css\";\r\n\r\nconst Container = ({ children }) => (\r\n    <main className=\"container\">\r\n        {children}\r\n    </main>\r\n);\r\n\r\nexport default Container;","import React, { useState } from 'react';\nimport Form from \"./Form\";\nimport Tasks from \"./Tasks\";\nimport Buttons from \"./Buttons\";\nimport TaskSection from \"./TaskSection\";\nimport FormSection from \"./FormSection\";\nimport Header from \"./Header\";\nimport Container from \"./Container\"\n\n\nfunction App() {\n  const [hideDone, setHideDone] = useState(false);\n  const [tasks, setTasks] = useState([\n    { id: 1, content: \"przej≈õƒá na reacta\", done: false },\n    { id: 2, content: \"zje≈õƒá obiad\", done: true },\n  ]);\n\n  const toggleHideDone = () => {\n    setHideDone(hideDone => !hideDone);\n  };\n\n  const removeTask = (id) => {\n    setTasks(tasks => tasks.filter(task => task.id !== id));\n  };\n\n  const toggleTaskDone = (id) => {\n    setTasks(tasks => tasks.map(task => {\n      if (task.id === id) {\n        return { ...task, done: !task.done };\n      }\n\n      return task;\n    }));\n  };\n\n  const setAllDone = () => {\n    setTasks(tasks => tasks.map(task => ({\n      ...task, \n      done: true,\n    })));\n  };\n\n  return (\n    <Container>\n      <Header title=\"Lista zada≈Ñ\" />\n      <FormSection\n        title=\"Dodaj nowe zadanie\"\n        body={<Form />}\n      />\n      <TaskSection\n        title=\"Lista zada≈Ñ\"\n        body={\n          <Tasks\n            tasks={tasks}\n            hideDone={hideDone}\n            removeTask={removeTask}\n            toggleTaskDone={toggleTaskDone}\n          />\n        }\n        extraHeaderContent={\n          <Buttons\n            tasks={tasks}\n            hideDone={hideDone}\n            toggleHideDone={toggleHideDone}\n            setAllDone={setAllDone}\n          />\n        }\n      />\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}